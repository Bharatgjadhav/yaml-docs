Imperative

kubectl create secret generic 
  <secret-name> --from-literal=<key>=value

kubectl create secret generic 
app-secret --from-literal=DB_HOST=mysql
           --from-literal=DB_USER=root
           --from-literal=DB_PASSWORD=pasword

kubectl create secret generic
   <secret-name> --from-file=<path-to-file>

kubectl create secret generic
   app-secret --from-file=app_secret.properties



Declarative
-----------------
kubectl create -f secret-data.yaml



kubectl get screts
kubectl describe secrets
kubectl get secret app_secret -o yaml


to encode value
----------------
echo -n "encode value " | base64
echo -n "bharat" |base64
echo -n "YmhhcmF0" |base64 --decode



kubectl explain pod --recursive  | less | grep -A8 -i envfrom

controlplane ~ âžœ  kubectl explain pod --recursive  | less | grep -A8 -i envfrom
         envFrom       
            configMapRef       
               name     
               optional 
            prefix      
            secretRef    
               name     
               optional 
         image  

apiVersion: v1
kind: Pod
metadata:
  labels:
    name: webapp-pod
  name: webapp-pod
  namespace: default
  uid: 8949c15a-9ce8-41a8-b5e2-d3f1e09eb9a9
spec:
  containers:
  - image: kodekloud/simple-webapp-mysql
    imagePullPolicy: Always
    name: webapp
    envFrom:       
    -   secretRef:  
              name: db-secret 





kubectl create secret generic db-secret --from-literal=DB_Host=sql01 --from-literal=DB_User=root --from-literal=DB_Password=password123

